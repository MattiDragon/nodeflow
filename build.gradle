plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version + "+mc." + project.minecraft_version
group = project.maven_group
base.archivesName = project.archives_base_name

repositories {
    maven { url = "https://maven.terraformersmc.com" }
    maven { url = "https://maven.quiltmc.org/repository/release" }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.isxander.dev/releases" }
    maven { url = "https://maven.isxander.dev/snapshots" }
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url = "https://jitpack.io" }
}

loom.splitEnvironmentSourceSets()

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$yarn_mappings:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"

    modCompileOnly /*modLocalRuntime*/("dev.isxander:controlify:$controllify_version") {
        exclude group: "maven.modrinth", module: "sodium"
        exclude group: "maven.modrinth", module: "iris"
        exclude group: "maven.modrinth", module: "immediatelyfast"
    }
    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    include(implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:$mixin_extras_version")))
}

loom {
    runs {
        server {
            runDir "serverRun"
        }
    }
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications.register("mavenJava", MavenPublication) {
        from components.java
    }
}